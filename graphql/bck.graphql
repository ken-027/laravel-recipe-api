
"Indicates what fields are available at the top level of a query operation."
# type Query {
#   "Find a single user by an identifying attribute."
#   user(
#     "Search by primary key."
#     id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

#     "Search by email address."
#     email: String
#       @eq
#       @rules(apply: ["prohibits:id", "required_without:id", "email"])
#   ): User @find

#   recipe(id: ID @eq): Recipe @find

#   "List multiple users."
#   users(
#     "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
#     name: String @where(operator: "like")
#   ): [User!]! @paginate(defaultCount: 10)

#   recipes(
#     "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
#     name: String @where(operator: "like")
#   ): [Recipe!]! @paginate(defaultCount: 10)

#   greet(name: String = "kean"): String @guard

#   tags: [Tag!]! @paginate(defaultCount: 10)
#   tag(id: ID @eq): Tag @find
# }

# type Mutation {
#   createTag(name: String! @rules(apply: ["string", "min:3", "max: 10"])): Tag! @create
#   updateTag(id: ID! @eq, name: String!): Tag @update
#   deleteTag(id: ID! @eq): Tag @delete
# }

# "Account of a person who utilizes this application."
# type User {
#   id: ID!
#   name: String!
#   email: String!
#   email_verified_at: DateTime
#   created_at: DateTime!
#   updated_at: DateTime!
# }

# type Recipe {
#   id: ID!
#   name: String!
#   description: String!
#   image: String
#   tags: String
#   servings: Int!
#   preparation_time: Int!
#   cooking_time: Int!
#   total_time: Int!
#   user: User! @belongsTo
#   created_at: DateTime!
#   instructions: [Instruction]! @hasMany
#   ingredients: [Ingredient]! @hasMany
# }

# type Instruction {
#   id: ID!
#   step_number: Int!
#   description: String
#   created_at: DateTime!
#   updated_at: DateTime!
# }

# type Ingredient {
#   id: ID!
#   name: String!
#   quantity: Int!
#   unit: String!
#   created_at: DateTime!
#   updated_at: DateTime!
# }

# type Tag {
#   id: ID!
#   name: String!
#   created_at: DateTime!
#   updated_at: DateTime!
# }
